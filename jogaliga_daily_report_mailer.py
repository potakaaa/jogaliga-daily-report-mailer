import yagmail, datetime, os, dotenv
from typing import List, Union


class DailyReportMailer:
    def __init__(self, repo: str, sender: str, receiver: str, app_password: str):
        self.repo = repo
        self.sender = sender
        self.receiver = receiver
        self.app_password = app_password
        self.today = datetime.date.today().strftime('%B %d, %Y')
        self.developer = []
        
        if repo == "frontend":
            self.developer.append("Gerald Helbiro Jr.")
            self.developer.append("Mark Tristan Fabellar")
        elif repo == "backend":
            self.developer.append("Gerald Helbiro Jr.")
            self.developer.append("Hans Del Mundo")
        else:
            raise ValueError("Invalid repo")

    def format_bullet_points(self, text: str) -> str:
        """Convert a block of text into HTML bullet points."""
        # Split the text into lines and filter out empty lines
        lines = [line.strip() for line in text.split('\n') if line.strip()]
        # Convert each line into a bullet point
        bullet_points = [f"â€¢ {line}" for line in lines]
        # Join with line breaks
        return "<br>".join(bullet_points)

    def send_report(self, dev1_accomplishments: str = "", dev2_accomplishments: str = "",
                   dev1_plans: str = "", dev2_plans: str = "",
                   dev1_blockers: str = "", dev2_blockers: str = "",
                   dev1_notes: str = "", dev2_notes: str = ""):
        subject = f"DAILY REPORT FOR JOGALIGA {self.repo.upper()} [{self.today.upper()}]"
        
        # Format all the text inputs into bullet points
        dev1_acc = self.format_bullet_points(dev1_accomplishments) if dev1_accomplishments else "None"
        dev2_acc = self.format_bullet_points(dev2_accomplishments) if dev2_accomplishments else "None"
        dev1_plan = self.format_bullet_points(dev1_plans) if dev1_plans else "None"
        dev2_plan = self.format_bullet_points(dev2_plans) if dev2_plans else "None"
        dev1_block = self.format_bullet_points(dev1_blockers) if dev1_blockers else "None"
        dev2_block = self.format_bullet_points(dev2_blockers) if dev2_blockers else "None"
        dev1_note = self.format_bullet_points(dev1_notes) if dev1_notes else "None"
        dev2_note = self.format_bullet_points(dev2_notes) if dev2_notes else "None"
        
        
        # Ultra-compact single table with no spacing issues
        body = f'''<table width="600" cellpadding="0" cellspacing="0" border="0" style="font-family:Arial,sans-serif;margin:0;padding:0;">
<tr><td bgcolor="#27a25a" style="color:#fff;padding:30px;border-radius:15px"><h1 style="margin:0;font-size:30px;">Jogaliga {self.repo.capitalize()} Daily Report</h1><p style="margin:10px 0 0 0;font-size:18px"><b>Developer:</b> {self.developer[0]}, {self.developer[1]}<br><b>Date:</b> {self.today}</p></td></tr>
<tr><td bgcolor="#ffffff" style="padding:10px;">
<h2 style="color:#27a25a;font-size:25px;margin:0 0 3px 0;padding:0;">Today's Accomplishments</h2>
<p style="margin:0 0 5px 0;font-size:18px"><b>{self.developer[0]}:</b></p>
<p style="margin:0 0 10px 20px;font-size:16px">{dev1_acc}</p>
<p style="margin:0 0 5px 0;font-size:18px"><b>{self.developer[1]}:</b></p>
<p style="margin:0 0 15px 20px;font-size:16px">{dev2_acc}</p>
<h2 style="color:#27a25a;font-size:25px;margin:0 0 3px 0;padding:0;">Tomorrow's Plan</h2>
<p style="margin:0 0 5px 0;font-size:18px"><b>{self.developer[0]}:</b></p>
<p style="margin:0 0 10px 20px;font-size:16px">{dev1_plan}</p>
<p style="margin:0 0 5px 0;font-size:18px"><b>{self.developer[1]}:</b></p>
<p style="margin:0 0 15px 20px;font-size:16px">{dev2_plan}</p>
<h2 style="color:#27a25a;font-size:25px;margin:0 0 3px 0;padding:0;">Blockers & Questions</h2>
<p style="margin:0 0 5px 0;font-size:18px"><b>{self.developer[0]}:</b></p>
<p style="margin:0 0 10px 20px;font-size:16px">{dev1_block}</p>
<p style="margin:0 0 5px 0;font-size:18px"><b>{self.developer[1]}:</b></p>
<p style="margin:0 0 15px 20px;font-size:16px">{dev2_block}</p>
<h2 style="color:#27a25a;font-size:25px;margin:0 0 3px 0;padding:0;">Notes</h2>
<p style="margin:0 0 5px 0;font-size:18px"><b>{self.developer[0]}:</b></p>
<p style="margin:0 0 10px 20px;font-size:16px">{dev1_note}</p>
<p style="margin:0 0 5px 0;font-size:18px"><b>{self.developer[1]}:</b></p>
<p style="margin:0 0 0 20px;font-size:16px">{dev2_note}</p>
</td></tr>
<tr><td bgcolor="#f9fafb" style="padding:15px;text-align:center;font-size:12px;color:#666;">This is an automated report generated by the Jogaliga {self.repo.capitalize()} team</td></tr>
</table>'''

        yag = yagmail.SMTP(self.sender, self.app_password)
        yag.send(self.receiver, subject, [body])
        print("Daily report sent successfully")




def main():

    dotenv.load_dotenv()

    MOCK_MODE = True

    sender = "helbirog@gmail.com"
    receiver = ["rhelbiro@gmail.com"]
    app_password = os.getenv("GMAIL_APP_PASSWORD")

    isValidRepo = False
    while not isValidRepo:
        try:
            repo = input("Enter the repo[1: Frontend, 2: Backend]: ").lower()
            if repo == "1":
                repo = "frontend"
                if not MOCK_MODE:
                    receiver.append("marktristanfabellar.pro@gmail.com")
            elif repo == "2":
                repo = "backend"
                if not MOCK_MODE:
                    receiver.append("hansdelmundo2005@gmail.com")
            else:
                raise ValueError("Invalid repo")
            isValidRepo = True
        except ValueError as e:
            print(e)
            isValidRepo = False

    mailer = DailyReportMailer(repo, sender, receiver, app_password)

    # Example usage:
    dev1_accomplishments = """
    Fixed Docker Compose configuration mismatches and updated gitignore for project knowledge files
    Implemented dedicated idempotency service for secure PIX transfer operations
    Fixed PIX transfer endpoints to properly utilize idempotency service
    """

    """
    Frontend
    Fixed incorrect height calculation on player profile screen
    Refactored login screens for dark mode compatibility
    Added informational text after headings on register and login screens for better UX consistency
    Refactored player dashboard for dark theme compatibility
    
    """

    dev2_accomplishments ="""
    
    """

    dev1_plans = """
    Continue fixing PIX transfer issues
    Continue working on idempotency service
    Continue working on PIX transfer endpoints
    """

    """
    Frontend
    Implement temporary buttons  for Team manager screens on sidebar
    Fix existing conflicts and clean up PR queue
    Fix the issue with the player dashboard screen (language and bottom bar overflow)
    """

    dev2_plans = """
    
    """

    dev1_blockers = """
    None
    """

    dev2_blockers = """
    None
    """

    dev1_notes = """
    None
    """

    dev2_notes = """
    None
    """

    mailer.send_report(dev1_accomplishments=dev1_accomplishments, dev2_accomplishments=dev2_accomplishments, dev1_plans=dev1_plans, dev2_plans=dev2_plans, dev1_blockers=dev1_blockers, dev2_blockers=dev2_blockers, dev1_notes=dev1_notes, dev2_notes=dev2_notes)


if __name__ == "__main__":
    main()

# .venv/Scripts/activate.ps1